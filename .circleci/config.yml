# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   build-and-deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
#     # Inside the workflow, you define the jobs you want to run.
jobs:
  build:
    docker:
      - image: cimg/node:17.2.0
        auth:
          username: iwizard1
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: false
      - run:
          name: Building all Image with Docker-compose
          command: docker-compose -f docker-compose-build.yaml build
      # - run:
      #     name: Buiding Docker Image
      #     command: docker build -t udagram-api-feed ./udagram-api-feed
      - run:
          name:  Dockerhub Login
          command: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Tag Image to DockerHub twin
          command: |
            docker tag udagram-api-feed iwizard1/udagram-api-feed:v1
            docker tag udagram-api-user iwizard1/udagram-api-user:v1
            docker tag udagram-frontend iwizard1/udagram-frontend:v1
            docker tag reverseproxy iwizard1/reverseproxy:v1
      - run:
          name: Pushing Image to Dockerhub
          command: |
            docker push iwizard1/udagram-api-feed:v2
            docker push iwizard1/udagram-api-user:v1
            docker push iwizard1/udagram-frontend:v1
            docker push iwizard1/reverseproxy:v1
workflows:
  build:
    jobs:
      - build:
          context: udagram-context
after_success:

      # - node/t est:
      #     # This is the node version to use for the `cimg/node` tag
      #     # Relevant tags can be found on the CircleCI Developer Hub
      #     # https://circleci.com/developer/images/image/cimg/node
      #     version: '12.0'
      #     # If you are using yarn, change the line below from "npm" to "yarn"
      #     pkg-manager: npm


# language: node_js
# node_js:
#   - 13

# services:
#   - docker

# # Pre-testing installs
# install:
#   - echo "nothing needs to be installed"

# # Scripts to be run such as tests
# before_script:
#   - echo "no tests"

# script:
#   - docker --version # print the version for logging
#   - docker build -t simple-node .
#   - docker tag simple-node YOUR_DOCKER_HUB/simple-node:latest

# # Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
# after_success:
#   - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#   - docker push YOUR_DOCKER_HUB/simple-node